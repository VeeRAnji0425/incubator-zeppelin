{
  "paragraphs": [
    {
      "text": "%md\n\nHow to use SparkSQL for analytics\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nI am not a developer, and I still want to use the **Cassandra/Spark** plateform",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1432055381634_1511349703",
      "id": "20150519-190941_901589394",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003eHow to use SparkSQL for analytics\u003c/h1\u003e\n\u003cp\u003eI am not a developer, and I still want to use the \u003cstrong\u003eCassandra/Spark\u003c/strong\u003e plateform\u003c/p\u003e\n"
      },
      "dateCreated": "May 19, 2015 7:09:41 PM",
      "dateStarted": "May 20, 2015 4:26:43 PM",
      "dateFinished": "May 20, 2015 4:26:43 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "prepare data",
      "text": "import org.apache.spark.{SparkConf, SparkContext}\nimport com.datastax.spark.connector._\nimport org.apache.spark.sql.functions._\n\n\ndef computeDecade(year:Int):String \u003d {\n    s\"${(year/10)*10}-${((year/10)+1)*10}\"\n}\n\nsqlContext.udf.register(\"computeDecade\", computeDecade _)\n\nsqlContext.sql(\"\"\"CREATE TEMPORARY TABLE performers\n    |USING org.apache.spark.sql.cassandra\n    |OPTIONS(table \"performers\", keyspace \"spark_demo\")\"\"\".stripMargin)\n\nsqlContext.sql(\"\"\"CREATE TEMPORARY TABLE albums\n    |USING org.apache.spark.sql.cassandra\n    |OPTIONS(table \"albums\", keyspace \"spark_demo\")\"\"\".stripMargin)\n",
      "dateUpdated": "Sep 22, 2015 10:33:50 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorHide": true,
        "tableHide": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1432482039662_-1172636874",
      "id": "20150524-174039_852332121",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.{SparkConf, SparkContext}\nimport com.datastax.spark.connector._\nimport org.apache.spark.sql.functions._\ncomputeDecade: (year: Int)String\nres3: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,StringType)\nres5: org.apache.spark.sql.DataFrame \u003d []\nres7: org.apache.spark.sql.DataFrame \u003d []\n"
      },
      "dateCreated": "May 24, 2015 5:40:39 PM",
      "dateStarted": "Sep 22, 2015 10:26:01 PM",
      "dateFinished": "Sep 22, 2015 10:26:53 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Albums Release By Decade",
      "text": "%sql\nSELECT computeDecade(a.year) as decade, p.country,count(a.title) as titles_count\n    FROM performers p JOIN albums a\n    ON p.name \u003d a.performer\n    WHERE p.country is not null\n    AND p.country !\u003d \u0027Unknown\u0027\n    AND a.year \u003e\u003d 1900\n    GROUP BY computeDecade(a.year),p.country\n    HAVING count(a.title) \u003e ${albumCountThreshold\u003d250}\n    ORDER BY decade",
      "dateUpdated": "Sep 22, 2015 10:33:30 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "decade",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "titles_count",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "decade",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "country",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorHide": false,
        "tableHide": false,
        "title": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {
          "countThreshold": "1000",
          "Albums Count Threshold": "250",
          "albumCountThreshold": "100"
        },
        "forms": {
          "albumCountThreshold": {
            "name": "albumCountThreshold",
            "defaultValue": "250",
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1431979407672_-74322143",
      "id": "20150518-220327_1132207280",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "decade\tcountry\ttitles_count\n1940-1950\tUSA\t161\n1950-1960\tUSA\t637\n1960-1970\tUnited Kingdom\t509\n1960-1970\tUSA\t1444\n1960-1970\tFrance\t108\n1970-1980\tGermany\t140\n1970-1980\tJamaica\t225\n1970-1980\tCanada\t126\n1970-1980\tBrazil\t118\n1970-1980\tFrance\t138\n1970-1980\tUSA\t1762\n1970-1980\tUnited Kingdom\t1218\n1970-1980\tItaly\t141\n1980-1990\tItaly\t192\n1980-1990\tFrance\t295\n1980-1990\tCanada\t231\n1980-1990\tGermany\t387\n1980-1990\tUSA\t2797\n1980-1990\tAustralia\t169\n1980-1990\tBrazil\t135\n1980-1990\tFinland\t128\n1980-1990\tJapan\t199\n1980-1990\tJamaica\t269\n1980-1990\tUnited Kingdom\t2818\n1980-1990\tSpain\t151\n1990-2000\tUSA\t7841\n1990-2000\tAustralia\t320\n1990-2000\tBelgium\t233\n1990-2000\tSweden\t781\n1990-2000\tArgentina\t202\n1990-2000\tFrance\t476\n1990-2000\tJamaica\t415\n1990-2000\tUnited Kingdom\t3966\n1990-2000\tGermany\t1396\n1990-2000\tItaly\t450\n1990-2000\tDenmark\t103\n1990-2000\tSpain\t273\n1990-2000\tPoland\t282\n1990-2000\tRussian Federation\t150\n1990-2000\tNorway\t369\n1990-2000\tCanada\t553\n1990-2000\tNetherlands\t223\n1990-2000\tBrazil\t189\n1990-2000\tJapan\t1328\n1990-2000\tTurkey\t168\n1990-2000\tFinland\t490\n2000-2010\tRussian Federation\t293\n2000-2010\tDenmark\t269\n2000-2010\tNew Zealand\t151\n2000-2010\tJamaica\t356\n2000-2010\tPoland\t513\n2000-2010\tJapan\t2573\n2000-2010\tNetherlands\t511\n2000-2010\tSpain\t514\n2000-2010\tTurkey\t253\n2000-2010\tFinland\t1321\n2000-2010\tSouth Korea\t112\n2000-2010\tSweden\t1808\n2000-2010\tIreland\t138\n2000-2010\tSwitzerland\t132\n2000-2010\tUSA\t13542\n2000-2010\tFrance\t1084\n2000-2010\tArgentina\t241\n2000-2010\tMexico\t228\n2000-2010\tGermany\t2569\n2000-2010\tEstonia\t129\n2000-2010\tItaly\t707\n2000-2010\tAustralia\t656\n2000-2010\tBelgium\t332\n2000-2010\tBrazil\t356\n2000-2010\tAustria\t186\n2000-2010\tUnited Kingdom\t5423\n2000-2010\tNorway\t760\n2000-2010\tCanada\t1348\n2010-2020\tUSA\t3493\n2010-2020\tFrance\t271\n2010-2020\tSweden\t374\n2010-2020\tGermany\t500\n2010-2020\tAustralia\t151\n2010-2020\tUnited Kingdom\t969\n2010-2020\tJapan\t300\n2010-2020\tNorway\t156\n2010-2020\tFinland\t272\n2010-2020\tSpain\t153\n2010-2020\tItaly\t206\n2010-2020\tPoland\t127\n2010-2020\tCanada\t375\n2010-2020\tNetherlands\t118\n"
      },
      "dateCreated": "May 18, 2015 10:03:27 PM",
      "dateStarted": "Sep 22, 2015 10:33:30 PM",
      "dateFinished": "Sep 22, 2015 10:33:54 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1442928969465_-571472822",
      "id": "20150922-153609_134935692",
      "dateCreated": "Sep 22, 2015 3:36:09 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "07-Cassandra SparkSQL Analytics",
  "id": "2ARM1VD5R",
  "angularObjects": {
    "2ANYRH787": [],
    "2AQBHNCAB": [],
    "2ANRWDJG1": [],
    "2ANNAMCUB": [],
    "2ARR8D6R9": [],
    "2AQAS485Z": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}
{
  "paragraphs": [
    {
      "text": "%md\n\nHow to use Spark to perform simple analytics\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431976661371_645219074",
      "id": "20150518-211741_1694859924",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003eHow to use Spark to perform simple analytics\u003c/h1\u003e\n"
      },
      "dateCreated": "May 18, 2015 9:17:41 PM",
      "dateStarted": "May 20, 2015 4:25:49 PM",
      "dateFinished": "May 20, 2015 4:25:49 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Reset Data",
      "text": "import org.apache.spark.rdd.RDD\n\nvar groupDistributionByStyles:RDD[(String,Int)] \u003d sc.parallelize(Nil)\nvar soloArtistsDistributionByStyles:RDD[(String,Int)] \u003d sc.parallelize(Nil)\nvar groups:RDD[(String,Int)] \u003d sc.parallelize(Nil)\nvar soloArtists:RDD[(String,Int)] \u003d sc.parallelize(Nil)\n",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorHide": true,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1432056014728_-147403497",
      "id": "20150519-192014_1566314701",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.spark.rdd.RDD\ngroupDistributionByStyles: org.apache.spark.rdd.RDD[(String, Int)] \u003d ParallelCollectionRDD[211] at parallelize at \u003cconsole\u003e:152\nsoloArtistsDistributionByStyles: org.apache.spark.rdd.RDD[(String, Int)] \u003d ParallelCollectionRDD[212] at parallelize at \u003cconsole\u003e:151\ngroups: org.apache.spark.rdd.RDD[(String, Int)] \u003d ParallelCollectionRDD[213] at parallelize at \u003cconsole\u003e:151\nsoloArtists: org.apache.spark.rdd.RDD[(String, Int)] \u003d ParallelCollectionRDD[214] at parallelize at \u003cconsole\u003e:151\n"
      },
      "dateCreated": "May 19, 2015 7:20:14 PM",
      "dateStarted": "May 25, 2015 9:00:39 AM",
      "dateFinished": "May 25, 2015 9:00:43 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create Performers distribution by style",
      "text": "import com.datastax.spark.connector._\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.rdd.RDD\n\nval PERFORMERS_TYPES \u003d Map(\"Person\"-\u003e\"artist\",\"Group\"-\u003e\"group\")\n\nval rdd:RDD[(String,List[String])] \u003d sc.cassandraTable(\"spark_demo\", \"performers\").\n    select(\"type\",\"styles\").\n    as((_:String,_:List[String])).\n    map{case(performer_type,style) \u003d\u003e (PERFORMERS_TYPES.getOrElse(performer_type,\"Unknown\"),style)}.\n    filter{case(performer_type,_) \u003d\u003e performer_type !\u003d \"Unknown\"}\n\nval pairs:RDD[((String,String),Int)] \u003d rdd.flatMap{\n    case(performer_type,styles)\u003d\u003estyles.map(style \u003d\u003e ((performer_type,style),1))\n}\n\nval reduced: RDD[((String, String), Int)] \u003d pairs.reduceByKey{case(left,right) \u003d\u003e left+right}\n\nval flattened:RDD[(String,String,Int)] \u003d reduced.map{\n      case((performer_type,style),count) \u003d\u003e (performer_type,style,count)\n}\n\nflattened.saveToCassandra(\"spark_demo\", \"performers_distribution_by_style\", SomeColumns(\"type\",\"style\",\"count\"))\n\ngroupDistributionByStyles \u003d sc.cassandraTable(\"spark_demo\", \"performers_distribution_by_style\").\n    select(\"style\",\"count\").\n    as((_:String,_:Int)).\n    where(\"type\u003d\u0027group\u0027\")\n\nsoloArtistsDistributionByStyles \u003d sc.cassandraTable(\"spark_demo\", \"performers_distribution_by_style\").\n    select(\"style\",\"count\").\n    as((_:String,_:Int)).\n    where(\"type\u003d\u0027artist\u0027\")    ",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1432497973901_-413498143",
      "id": "20150524-220613_1141035511",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import com.datastax.spark.connector._\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.rdd.RDD\nPERFORMERS_TYPES: scala.collection.immutable.Map[String,String] \u003d Map(Person -\u003e artist, Group -\u003e group)\nrdd: org.apache.spark.rdd.RDD[(String, List[String])] \u003d FilteredRDD[275] at filter at \u003cconsole\u003e:188\npairs: org.apache.spark.rdd.RDD[((String, String), Int)] \u003d FlatMappedRDD[276] at flatMap at \u003cconsole\u003e:186\nreduced: org.apache.spark.rdd.RDD[((String, String), Int)] \u003d ShuffledRDD[277] at reduceByKey at \u003cconsole\u003e:188\nflattened: org.apache.spark.rdd.RDD[(String, String, Int)] \u003d MappedRDD[278] at map at \u003cconsole\u003e:190\ngroupDistributionByStyles: org.apache.spark.rdd.RDD[(String, Int)] \u003d CassandraTableScanRDD[282] at RDD at CassandraRDD.scala:15\nsoloArtistsDistributionByStyles: org.apache.spark.rdd.RDD[(String, Int)] \u003d CassandraTableScanRDD[286] at RDD at CassandraRDD.scala:15\n"
      },
      "dateCreated": "May 24, 2015 10:06:13 PM",
      "dateStarted": "May 25, 2015 9:07:01 AM",
      "dateFinished": "May 25, 2015 9:07:13 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Display Style Distribution For Groups",
      "text": "groupDistributionByStyles.displayAsTable(\"Style\",\"Count\")",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Style",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "Count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Style",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1432499028932_-269488207",
      "id": "20150524-222348_1703182152",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Style\n"
      },
      "dateCreated": "May 24, 2015 10:23:48 PM",
      "dateStarted": "May 25, 2015 9:00:45 AM",
      "dateFinished": "May 25, 2015 9:00:46 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Display Style Distribution For Solo Artists",
      "text": "groupDistributionByStyles.displayAsTable(\"Style\",\"Count\")",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Style",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "Count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Style",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1432499036178_955952364",
      "id": "20150524-222356_899064097",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Style\n"
      },
      "dateCreated": "May 24, 2015 10:23:56 PM",
      "dateStarted": "May 25, 2015 9:00:47 AM",
      "dateFinished": "May 25, 2015 9:00:48 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Top 10 styles Computation",
      "text": "import com.datastax.spark.connector._\nimport com.datastax.spark.connector\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.sql.cassandra.CassandraSQLContext\n\nval cc \u003d new CassandraSQLContext(sc)\n\nval groupRDD:RDD[(String,Int)] \u003d cc.cassandraSql(s\"\"\"\n    SELECT *\n    FROM spark_demo.performers_distribution_by_style\n    WHERE style !\u003d \u0027Unknown\u0027 AND type \u003d \u0027group\u0027\n    \"\"\").\n    map(row \u003d\u003e (row.getString(1),row.getInt(2))).\n    sortBy(tuple \u003d\u003e tuple._2,false,1)\n\ngroupRDD.cache()\n\nval soloArtistRDD:RDD[(String,Int)] \u003d cc.cassandraSql(s\"\"\"\n    SELECT *\n    FROM spark_demo.performers_distribution_by_style\n    WHERE style !\u003d \u0027Unknown\u0027 AND type \u003d \u0027artist\u0027\n    \"\"\").\n    map(row \u003d\u003e (row.getString(1),row.getInt(2))).\n    sortBy(tuple \u003d\u003e tuple._2,false,1)\n\nsoloArtistRDD.cache()\n\n// Count total number of artists having styles that are not in the top 10\nval otherStylesCountForGroup:Int \u003d groupRDD.\n    collect().\n    drop(10).\n    map{case(_,count)\u003d\u003ecount}.\n    sum\n\n// Count total number of groups having styles that are not in the top 10\nval otherStylesCountForArtist:Int \u003d soloArtistRDD.\n    collect().\n    drop(10).\n    map{case(_,count)\u003d\u003ecount}.\n    sum\n\ngroups \u003d sc.parallelize(groupRDD.take(10).toSeq :+ (\"Others\",otherStylesCountForGroup))\nsoloArtists \u003d sc.parallelize(soloArtistRDD.take(10).toSeq :+ (\"Others\",otherStylesCountForArtist))",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true,
        "tableHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431976720488_-369855794",
      "id": "20150518-211840_1709405074",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import com.datastax.spark.connector._\nimport com.datastax.spark.connector\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.sql.cassandra.CassandraSQLContext\ncc: org.apache.spark.sql.cassandra.CassandraSQLContext \u003d org.apache.spark.sql.cassandra.CassandraSQLContext@2dcd2abb\ngroupRDD: org.apache.spark.rdd.RDD[(String, Int)] \u003d MappedRDD[195] at sortBy at \u003cconsole\u003e:163\nres208: groupRDD.type \u003d MappedRDD[195] at sortBy at \u003cconsole\u003e:163\nsoloArtistRDD: org.apache.spark.rdd.RDD[(String, Int)] \u003d MappedRDD[200] at sortBy at \u003cconsole\u003e:163\nres211: soloArtistRDD.type \u003d MappedRDD[200] at sortBy at \u003cconsole\u003e:163\notherStylesCountForGroup: Int \u003d 1753\notherStylesCountForArtist: Int \u003d 1375\ngroups: org.apache.spark.rdd.RDD[(String, Int)] \u003d ParallelCollectionRDD[209] at parallelize at \u003cconsole\u003e:163\nsoloArtists: org.apache.spark.rdd.RDD[(String, Int)] \u003d ParallelCollectionRDD[210] at parallelize at \u003cconsole\u003e:162\n"
      },
      "dateCreated": "May 18, 2015 9:18:40 PM",
      "dateStarted": "May 25, 2015 8:59:26 AM",
      "dateFinished": "May 25, 2015 8:59:39 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Music Style Distribution For Solo Artists",
      "text": "soloArtists.displayAsTable(\"Music Style\",\"Count\")",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 376.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Music Style",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "Count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Music Style",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "title": true,
        "tableHide": false,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431978361052_-1069750746",
      "id": "20150518-214601_1348217378",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Music Style\n"
      },
      "dateCreated": "May 18, 2015 9:46:01 PM",
      "dateStarted": "May 25, 2015 9:00:52 AM",
      "dateFinished": "May 25, 2015 9:00:53 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Music Style Distribution for bands",
      "text": "groups.displayAsTable(\"Music Style\",\"Count\")",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 374.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Music Style",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "Count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Music Style",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "tableHide": false,
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431980737351_-1974914955",
      "id": "20150518-222537_1925810416",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Music Style\n"
      },
      "dateCreated": "May 18, 2015 10:25:37 PM",
      "dateStarted": "May 25, 2015 9:00:55 AM",
      "dateFinished": "May 25, 2015 9:00:56 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431981260927_-1741421634",
      "id": "20150518-223420_1476305925",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "May 18, 2015 10:34:20 PM",
      "dateStarted": "May 20, 2015 1:10:08 PM",
      "dateFinished": "May 20, 2015 1:10:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "05-Cassandra Spark Analytics",
  "id": "2ANFKPDPS",
  "angularObjects": {},
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}